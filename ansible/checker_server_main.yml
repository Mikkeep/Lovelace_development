- name: Start Aux_checker server and install packages
  hosts: Auxchecker2
  become: yes
  become_user: root
  vars_files:
    - group_vars/all

  tasks:

    - name: Update repositories
      apt:
        update_cache: yes

    - name: Install Packages
      apt:
        name:
          - python3-pip
          - python3-dev
          - virtualenv
          - apache2
          - apache2-dev
          - python3.8-venv
          - postgresql-client-12
          - nfs-common
          - rpcbind

- name: Server Configuration
  hosts: Auxchecker2
  become: yes
  become_method: sudo
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    
  - name: Add Checker user
    ansible.builtin.user:
      name: "{{ lovelace_checker_user }}"
      password: "{{ lovelace_checker_password_masked }}"
      shell: /bin/bash
      groups: sudo, www-data
      createhome: yes

- name: Checker server configuration
  hosts: Auxchecker2
  become: yes
  become_method: sudo
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

  - name: Install psycopg2
    pip:
      name: psycopg2-binary
      state: latest

  - name: Install wsgi
    pip:
      name: mod_wsgi
      state: latest

  - name: Make Checker directory
    ansible.builtin.file:
      path: /var/{{ lovelace_checker_user }}
      state: directory
      owner: "{{ lovelace_checker_user }}"

  - name: Git clone Lovelace to VM
    ansible.builtin.git:
      repo: 'https://github.com/lovelace-dev-org/lovelace.git'
      dest: /var/{{ lovelace_checker_user }}
      version: rapid_dev
    ignore_errors: true
      
  - name: Install RabbitMQ server and Erlang
    apt:
      update_cache: yes
      name:
        - rabbitmq-server
        - redis
        - redis-server
        - libjpeg-turbo8-dev

  - name: Copy Requirements.txt and Apache conf to Lovelace
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
      - { src: '../conf/requirements.txt', dest: '/home/{{ lovelace_checker_user }}/' }
      - { src: '../conf/setup_checker.sh', dest: '/home/{{ lovelace_checker_user }}/setup.sh', mode=0777 }
      - { src: '../conf/checker.py', dest: '/var/{{ lovelace_checker_user }}/webapp/lovelace/settings/checker.py', mode=0777 }

  - name: Start RCPBIND
    systemd: name=rpcbind state=restarted enabled=yes

  - name: Make new rabbitMQ user
    shell: sudo rabbitmqctl add_user lovelace lovelace
    ignore_errors: true

  - name: Set RabbitMQ user rights
    shell: sudo rabbitmqctl set_user_tags lovelace administrator
    ignore_errors: true
  
  - name: Set RabbitMQ user permissions
    shell: sudo rabbitmqctl set_permissions -p / lovelace "." "." ".*"
    ignore_errors: true

  - name: Start RabbitMQ server
    systemd: name=rabbitmq-server state=restarted enabled=yes

  - name: Make mount folder for NFS
    file:
      path: /mnt/nfs
      state: directory
      mode: '0777'

  - name: Edit fstab
    lineinfile:
      path: /etc/fstab
      line:  "{{ lovelace_ip }}:/var/{{ lovelace_user }}/webapp/upload /mnt/nfs nfs defaults  0 0"
#      line: "{{ lovelace_ip }}:/var/{{ lovelace_user }}/webapp/upload /mnt/nfs ro,noexec,nosuid,soft,auto  0 0"

#  - name: Mount nfs
#    shell: sudo mount /mnt/nfs/

  - name: Configure NFS disks
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: (PRIVATE_STORAGE_FS_PATH = )
      line: PRIVATE_STORAGE_FS_PATH = "/mnt/nfs"

  - name: Configure Worker username
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: (WORKER_USERNAME = )
      line: WORKER_USERNAME = "{{ lovelace_checker_user }}"

  - name: Configure Restricted username
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: (RESTRICTED_USERNAME = )
      line: RESTRICTED_USERNAME = "{{ lovelace_checker_user }}"

  - name: Change Redis conf to accept external cons
    lineinfile:
      path: /etc/redis/redis.conf
      regexp: (protected-mode yes)
      line: protected-mode no

  - name: Change Redis conf to accept all external cons
    lineinfile:
      path: /etc/redis/redis.conf
      regexp: (bind 127.0.0.1 ::1)
      line: "#bind {{ lovelace_aux_ip }}"

  - name: Restart Redis
    systemd: name=redis state=restarted enabled=yes

  - name: Setup venv for Aux_checker
    pip:
      virtualenv: /home/{{ lovelace_checker_user }}/venv
      virtualenv_command: /usr/bin/python3.8 -m venv
      requirements: /home/{{ lovelace_checker_user }}/requirements.txt
    become: true
    become_user: "{{ lovelace_checker_user }}"

  - name: Install stdlib-list and pylint
    pip:
      name:
        - stdlib-list
        - pylint

  - name: Configure Checker USER
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: \'(USER)\'\:\s'(mydatabaseuser)'
      line: "	'USER': '{{ db_main_user }}',"
      
  - name: Configure Checker PASSWORD
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: \'(PASSWORD)\'\:\s'(mypassword)'
      line: "	'PASSWORD': '{{ db_main_user_password }}',"

  - name: Configure Checker NAME
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: \'(NAME)\'\:\s'(mydatabase)'
      line: "	'NAME': '{{ db_main_database_name }}',"

  - name: Configure Checker db address
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: \'(HOST)\'\:\s'(127.0.0.1)'
      line: "	'HOST': '{{ lovelace_ip }}',"

  - name: Configure Aux_checker settings file
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/__init__.py
      regexp: '^from '
      line: "from lovelace.settings.checker import *"

  - name: Configure ALLOWED_HOSTS
    lineinfile:
      path: /var/{{ lovelace_checker_user }}/webapp/lovelace/settings/factory.py
      regexp: (ALLOWED_HOSTS = )
      line: ALLOWED_HOSTS = ["127.0.0.1", "{{ lovelace_aux_ip }}", "{{ lovelace_ip }}"]

  - name: Make directory static
    shell: mkdir /var/{{ lovelace_checker_user }}/webapp/static
    ignore_errors: yes

  - name: Make directory images in upload
    shell: mkdir -p /var/{{ lovelace_checker_user }}/webapp/upload/images
    ignore_errors: yes

  - name: Configure chown correctly
    shell: chown -R {{ lovelace_checker_user }} /var/{{ lovelace_checker_user }}
  
  - name: Configure chown correctly
    shell: chown -R www-data /var/{{ lovelace_checker_user }}/webapp/upload

  - name: Add var/www to www-data group
    shell: sudo chown -R www-data:www-data /var/www

  - name: Add rights to /var/www folder to www-data group members
    shell: sudo chmod -R g+rw /var/www/

  - name: Add rights to run mod_wsgi
    shell: chmod a+x /var/{{ lovelace_checker_user }}/webapp/lovelace/wsgi.py

