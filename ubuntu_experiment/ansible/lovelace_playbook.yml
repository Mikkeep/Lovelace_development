- name: Start Server and install packages
  hosts: Lovelace
  become: yes
  become_user: root
  tasks:

    - name: Update repositories
      apt:
        update_cache: yes

    - name: Install PostGreSQL Server
      apt:
        name:
          - postgresql-12
          - postgresql-contrib
          - python3-pip
          - python3-dev
          - virtualenv
          - python3.8-venv
          - postgresql-client-12
      
- name: Server Configuration
  hosts: Lovelace
  become: yes
  become_method: sudo
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
  
  - name: Install psycopg2
    pip:
      name: psycopg2-binary
      state: latest

  - name: Edit PostGreSQL conf
    ansible.builtin.lineinfile:
      path: /etc/postgresql/12/main/postgresql.conf
      regexp: '^#listen_addresses = '
      line: listen_addresses = 'localhost,192.168.1.14'

  - name: Edit PostGreSQL pg_hba conf
    ansible.builtin.lineinfile:
      path: /etc/postgresql/12/main/pg_hba.conf
      regexp: '^#host '
      line: host    lovelace    lovelace    192.168.1.14/24 md5
      #VOI JOUTUA MUUTTAMAAN ILMAN HASTAGIA OLEVAKSI
      
  - name: Start and enable postgres on startup
    service: "name={{ item }} state=started enabled=yes"
    with_items:
      - postgresql
      
  - name: Create db user
    postgresql_user:
      state: present
      name: lovelace
      password: lovelace
    become: true
    become_user: postgres
      
  - name: Create Lovelace db
    postgresql_db:
      state: present
      #name: "{{ db_name }}"
      name: lovelace
    become: true
    become_user: postgres

  - name: Grant db user access to Lovelace db
    postgresql_privs:
      type: database
      #database: "{{ db_name }}"
      database: lovelace
      #roles: "{{ db_user }}"
      roles: postgres
      grant_option: no
      privs: all
    become: true
    become_user: postgres
    
  - name: Add Lovelace user
    ansible.builtin.user:
      name: lovelace
      group: sudo
      createhome: yes

- name: Lovelave configuration
  hosts: Lovelace
  become: yes
  become_method: sudo
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:


  - name: Make lovelace directory
    ansible.builtin.file:
      path: /var/lovelace
      state: directory
      owner: lovelace
    
  - name: Git clone Lovelace to VM
    ansible.builtin.git:
      repo: 'https://github.com/miikkas/lovelace.git'
      dest: /var/lovelace
      
  - name: Install RabbitMQ server and Erlang
    apt:
      update_cache: yes
      name:
        - rabbitmq-server
        - redis
        - redis-server
        - libjpeg-turbo8-dev
      
  - name: Copy Requirements.txt to Lovelace
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
      - { src: '../requirements.txt', dest: '/home/lovelace/' }
      
  - name: Setup venv for Lovelace
    pip:
      virtualenv: /var/lovelace/venv
      virtualenv_command: /usr/bin/python3.8 -m venv
      requirements: /home/lovelace/requirements.txt

  - name: Configure Lovelace USER
    ansible.builtin.lineinfile:
      path: /var/lovelace/webapp/lovelace/settings/factory.py
      regexp: \'(USER)\'\:\s'(mydatabaseuser)'
      line: "	'USER': 'lovelace',"
      
  - name: Configure Lovelace PASSWORD
    ansible.builtin.lineinfile:
      path: /var/lovelace/webapp/lovelace/settings/factory.py
      regexp: \'(PASSWORD)\'\:\s'(mypassword)'
      line: "	'PASSWORD': 'lovelace',"

  - name: Configure Lovelace NAME
    ansible.builtin.lineinfile:
      path: /var/lovelace/webapp/lovelace/settings/factory.py
      regexp: \'(NAME)\'\:\s'(mydatabase)'
      line: "	'NAME': 'lovelace',"
      
  - name: Configure Lovelace STATIC_ROOT
    ansible.builtin.lineinfile:
      path: /var/lovelace/webapp/lovelace/settings/factory.py
      regexp: (STATIC_ROOT)
      line: "STATIC_ROOT = '/var/www/lovelace/static'"
      
  - name: Configure Lovelace MEDIA_ROOT
    ansible.builtin.lineinfile:
      path: /var/lovelace/webapp/lovelace/settings/factory.py
      regexp: (MEDIA_ROOT =)
      line: "MEDIA_ROOT = '/var/www/lovelace/upload'"
      
  
